using System.Threading.Tasks;
using Bitcraft.StateMachine.UnitTests.AutoGenerated;
using Xunit;

namespace Bitcraft.StateMachine.UnitTests
{
    public class AutoGeneratedStateMachineUnitTests
    {
        [Fact]
        public async Task TestMethod01()
        {
            var context = new StateMachineTestContext();

            var sm = new StateManager(context);

            sm.StateChanged += (ss, ee) => System.Diagnostics.Debug.WriteLine($"State changed from '{ee.OldState}' to '{ee.NewState}'");
            sm.Completed += (ss, ee) =>
            {
                Assert.Equal(6, context.TestStatus);
                ((StateMachineTestContext)sm.Context).TestStatus++;
            };

            sm.RegisterState(new TestAutoBeginState());
            sm.RegisterState(new TestAutoUpdateState());
            sm.RegisterState(new TestAutoEndState());

            sm.SetInitialState(TestAutoStateTokens.Begin, null);

            await sm.PerformAction(TestAutoActionTokens.InitDone, 51);
            await sm.PerformAction(TestAutoActionTokens.Update);
            await sm.PerformAction(TestAutoActionTokens.Update);
            await sm.PerformAction(TestAutoActionTokens.Update);
            await sm.PerformAction(TestAutoActionTokens.Update);
            await sm.PerformAction(TestAutoActionTokens.Update);
            await sm.PerformAction(TestAutoActionTokens.Terminate);

            Assert.Equal(5, context.TestStatus);

            await sm.PerformAction(TestAutoActionTokens.Finalize);

            Assert.Equal(7, context.TestStatus);
        }
    }
}
